version: '3.8'

services:
    gateway-service:
        image: claudiapreda2307/knowcc-gateway:init
        environment:
            NODE_ENV: development
            AUTH_SERVICE_HOST: knowcc-cluster_auth-service
            QUIZZES_SERVICE_HOST: knowcc-cluster_quizzes-service
        deploy:
            replicas: 3
            placement:
                max_replicas_per_node: 2
            update_config:
                parallelism: 2
                delay: 10s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
        networks:
            - frontend-gateway-net
            - backend-auth-net
        depends_on:
            - auth-service
            - quizzes-service

    auth-service:
        image: claudiapreda2307/knowcc-auth:latest
        environment:
            PGUSER_FILE: db-user-secret
            PGPASSWORD_FILE: db-password-secret
            PGHOST: knowcc-cluster_db
            PGPORT: 5432
            PGDATABASE: knowcc
            NODE_ENV: staging
        secrets:
            - db-password-secret
            - db-user-secret
        deploy:
            replicas: 3
            placement:
                max_replicas_per_node: 2
            update_config:
                parallelism: 2
                delay: 10s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
        networks:
            - backend-auth-net
            - db-auth-net
    
    quizzes-service:
        image: claudiapreda2307/knowcc-quizzes:init
        environment:
            IO_SERVICE_HOST: knowcc-cluster_io-service
            AUTH_SERVICE_HOST: knowcc-cluster_auth-service
            NODE_ENV: development
        deploy:
            replicas: 2
            placement:
                max_replicas_per_node: 1
            update_config:
                parallelism: 1
                delay: 10s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
        networks:
            - backend-io-net
            - backend-auth-net
        depends_on:
            - io-service
          
    io-service:
        image: claudiapreda2307/knowcc-io:init
        environment:
            PGUSER_FILE: db-user-secret
            PGPASSWORD_FILE: db-password-secret
            PGHOST: knowcc-cluster_db
            PGPORT: 5432
            PGDATABASE: knowcc
            NODE_ENV: staging
        secrets:
            - db-password-secret
            - db-user-secret
        deploy:
            replicas: 3
            placement:
                max_replicas_per_node: 2
            update_config:
                parallelism: 2
                delay: 10s
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
        networks:
            - db-io-net
            - backend-io-net
        depends_on:
            - db

    db:
        image: postgres:12
        environment:
            POSTGRES_DB: knowcc
            POSTGRES_USER_FILE: /run/secrets/db-user-secret
            POSTGRES_PASSWORD_FILE: /run/secrets/db-password-secret
        secrets:
            - db-password-secret
            - db-user-secret
        volumes:
            - ./Database/init-db.sql:/docker-entrypoint-initdb.d/init.sql
            - pdocostgres-volume:/var/lib/postgresql/data
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - db-adminer-net
            - db-io-net
            - db-auth-net

    adminer:
        image: adminer
        deploy:
            placement:
                constraints: [node.role == manager]
        depends_on:
            - db
        networks:
            - db-adminer-net
            - internal
    
    frontend-service:
        image: claudiapreda2307/knowcc-frontend:init
        environment:
            NODE_ENV: development
            REACT_APP_GATEWAY_SERVICE_HOST: 192.168.99.100
        deploy:
            replicas: 2
            placement:
                max_replicas_per_node: 1
            update_config:
                order: start-first
            rollback_config:
                order: stop-first
            restart_policy:
                condition: on-failure
        depends_on:
            - gateway-service
        
    nginx:
        image: nginx:alpine
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - internal
            - frontend-gateway-net
        depends_on:
            - frontend-service
            - adminer

    
networks:
    db-adminer-net:
    db-io-net:
    db-auth-net:
    backend-io-net:
    frontend-gateway-net:
    backend-auth-net:
    internal:

volumes:
    postgres-volume:

secrets:
    db-password-secret:
        file: ./secrets/db-password-secret.txt
    db-user-secret:
        file: ./secrets/db-user-secret.txt
